Things that may be cool.
     - Change :lcd when changing directory in the buffer
         This would mean you can use 'gf' on files from 'ls' output
         This is emulating the rc(1) cd() shell function that modifies the
         acme(1) win(1) window after finishing.
         Could do similar: create a bash cd() function that checks its return
         code and sends a signal back to the neovim server telling it to :lcd
         in the vsh_buf.
     - Special handling of git/hg commands to use fugitive/lawrencium
         Don't think this is that good an idea to be honest: it would be
         setting a precedent for special handling of different commands which
     - Put jobresize() on an autocmd for a window resize (or if that gets
         confusing because you have to find the largest window viewing this
         buffer, on the autocmd of resizing Vim).

XXX Inherent problems in the idea
        What happens when the user removes the prompt that caused the latest
        output?
                Just put output at the end of the file -- it's not that bad.
        How should the user use interactive programs?
                Things that use ncurses should not be used.
                Programs that take user input that isn't line-buffered may be more
                important -- whatever they are.
                I can deal with it via direct calls to jobsend(), it's just whether
                to create a nice user interface to deal with it.

XXX In the future I may want an option to put output into echo area.



Strange things noticed.
1) Sometimes see output on terminal after closing neovim
   ``
   ~ [18:22:38] % vim test.vsh                                                                                                                                                         [0,1083]
   "test.vsh" "test.vsh" 87L, 3911C
   ".vim/my_plugins/vsh/autoload/vsh/vsh.py" ".vim/my_plugins/vsh/autoload/vsh/vsh.py" 78L, 2950C
   Error detected while processing function provider#python#Call:
   line     18:
   Invalid channel "1"%                                                                                                                                                                                                                                                                                                                                                                                                                            ~ [18:39:29] %                                                                                                                                                                                                                                                                                                                                                                                                                     [0,1084]
   ```

